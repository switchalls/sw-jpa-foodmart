// see https://spring.io/guides/gs/gradle/

plugins {
    id "org.springframework.boot" version "2.7.5"
    id "io.spring.dependency-management" version "1.0.11.RELEASE"
    id "java"
}

group "sw.learning"
version "0.0.1-SNAPSHOT"
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-jdbc"
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation "com.h2database:h2"
    implementation "com.google.code.findbugs:jsr305:3.0.2" // for @Nullable

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.springframework:spring-test"
    testImplementation "com.github.springtestdbunit:spring-test-dbunit:1.3.0"
    testImplementation "org.dbunit:dbunit:2.7.3"

    /**
     * add rest-api
     */

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "mysql:mysql-connector-java"

    implementation 'org.springdoc:springdoc-openapi-ui:1.6.14'
    implementation 'io.micrometer:micrometer-registry-prometheus:1.10.3'

    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springdoc:springdoc-openapi-data-rest:1.6.14'

    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
}

test {
    useJUnitPlatform()
}

springBoot {
    buildInfo() // populate actuator/info endpoint
}